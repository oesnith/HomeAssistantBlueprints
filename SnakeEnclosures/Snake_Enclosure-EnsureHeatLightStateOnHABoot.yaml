blueprint:
  name: Snake Enclosure - Ensure Heat/Light State on HA Boot
  description: Automation to ensure the lights and thermostat preset is set correctly based on the scheduled day start and night start.
  domain: automation
  input:
    day_time_start:
      name: Day Time Start Time
      selector:
        entity:
          domain:
            - input_datetime
    night_time_start:
      name: Night Time Start Time
      selector:
        entity:
          domain:
            - input_datetime
    thermostat_selection:
      name: Enclosure Thermostat
      selector:
        entity:
          domain:
            - climate
          multiple: false
    lights_selection:
      name: Enclosure Lights
      selector:
        entity:
          domain:
            - switch
            - input_boolean
            - light
          multiple: true
    thermostat_bypass:
      name: Thermostat Bypass
      default:
      selector:
        entity:
          domain:
            - input_boolean
    light_bypass:
      name: Light Bypass
      default:
      selector:
        entity:
          domain:
            - input_boolean


variables:
  day_time_start: !input "day_time_start"
  night_time_start: !input "night_time_start"
  thermostat_selection: !input "thermostat_selection"
  lights_selection: !input "lights_selection"
  thermostat_bypass: !input "thermostat_bypass"
  light_bypass: !input "light_bypass"

alias: <EnclosureName> - Ensure Heat/Light State on HA Boot
#description: Use the helper field to turn the Day Light Bulb *ON* at the scheduled time.

trigger:
  - platform: homeassistant
    event: start
condition: []


actions:
  - choose:
      - conditions: #DAY TIME
          - condition: time
            after: !input day_time_start
            before: !input night_time_start
        sequence:
          - choose: # THERMOSTAT BYPASS CHECK
              - conditions: #THERMOSTAT SHOULD BE DISABLED
                  - condition: state
                    entity_id: !input thermostat_bypass
                    state: "on"
                sequence:
                  - service: climate.set_preset_mode
                    data:
                      preset_mode: "none"
                    entity_id: !input thermostat_selection
                  - service: climate.set_hvac_mode
                    target:
                      entity_id: !input thermostat_selection
                    data:
                      hvac_mode: "off"

              - conditions: #THERMOSTAT SHOULD BE ON HEAT
                  - condition: not
                    conditions: 
                      - condition: state
                        entity_id: !input thermostat_bypass
                        state: "on"
                sequence:
                  - service: climate.set_preset_mode
                    data:
                      preset_mode: "comfort"
                    entity_id: !input thermostat_selection
                  - service: climate.set_hvac_mode
                    target:
                      entity_id: !input thermostat_selection
                    data:
                      hvac_mode: "heat"

          - choose: # LIGHT BYPASS CHECK
#              - conditions: #LIGHT SHOULD BE UNMANAGED
#                  - condition: state
#                    entity_id: !input light_bypass
#                    state: "on"
#                sequence:
#                  - service: homeassistant.turn_on
#                    target:
#                      entity_id: '{{ expand(lights_selection) | selectattr("entity_id", "!=", trigger.entity_id) | map(attribute="entity_id") | list }}'

              - conditions: #LIGHT SHOULD BE MANAGED
                  - condition: not
                    conditions: 
                      - condition: state
                        entity_id: !input light_bypass
                        state: "on"
                sequence:
                  - service: homeassistant.turn_on
                    target:
                      entity_id: '{{ expand(lights_selection) | selectattr("entity_id", "!=", trigger.entity_id) | map(attribute="entity_id") | list }}'






      - conditions: #NIGHT TIME
          - condition: time
            after: !input night_time_start 
            before: !input day_time_start

        sequence:
          - choose: # THERMOSTAT BYPASS CHECK
              - conditions: #THERMOSTAT SHOULD BE DISABLED
                  - condition: state
                    entity_id: !input thermostat_bypass
                    state: "on"
                sequence:
                  - service: climate.set_preset_mode
                    data:
                      preset_mode: "none"
                    entity_id: !input thermostat_selection
                  - service: climate.set_hvac_mode
                    target:
                      entity_id: !input thermostat_selection
                    data:
                      hvac_mode: "off"

              - conditions: #THERMOSTAT SHOULD BE ON HEAT
                  - condition: not
                    conditions: 
                      - condition: state
                        entity_id: !input thermostat_bypass
                        state: "on"
                sequence:
                  - service: climate.set_preset_mode
                    data:
                      preset_mode: "eco"
                    entity_id: !input thermostat_selection
                  - service: climate.set_hvac_mode
                    target:
                      entity_id: !input thermostat_selection
                    data:
                      hvac_mode: "heat"

          - choose: # LIGHT BYPASS CHECK
#              - conditions: #LIGHT SHOULD BE UNMANAGED
#                  - condition: state
#                    entity_id: !input light_bypass
#                    state: "on"
#                sequence:
#                  - service: homeassistant.turn_on
#                    target:
#                      entity_id: '{{ expand(lights_selection) | selectattr("entity_id", "!=", trigger.entity_id) | map(attribute="entity_id") | list }}'

              - conditions: #LIGHT SHOULD BE MANAGED
                  - condition: not
                    conditions: 
                      - condition: state
                        entity_id: !input light_bypass
                        state: "on"
                sequence:
                  - service: homeassistant.turn_off
                    target:
                      entity_id: '{{ expand(lights_selection) | selectattr("entity_id", "!=", trigger.entity_id) | map(attribute="entity_id") | list }}'
mode: single
